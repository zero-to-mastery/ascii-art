[tool.poetry]
authors = ["zero-to-mastery"]
description = ""
name = "ascii-art"
package-mode = false
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
GitPython = "3.1.43"
Jinja2 = "3.1.4"
MarkupSafe = "2.1.5"
Pygments = "2.18.0"
altair = "5.4.1"
attrs = "24.2.0"
blinker = "1.8.2"
cachetools = "5.5.0"
certifi = "2024.8.30"
charset-normalizer = "3.3.2"
click = "8.1.7"
colorama = "0.4.6"
contourpy = "1.3.0"
cycler = "0.12.1"
fonttools = "4.54.1"
gitdb = "4.0.11"
idna = "3.10"
imageio = "2.35.1"
jsonschema = "4.23.0"
jsonschema-specifications = "2023.12.1"
kiwisolver = "1.4.7"
lazy_loader = "0.4"
markdown-it-py = "2.2.0"
matplotlib = "3.9.2"
mdurl = "0.1.2"
narwhals = "1.9.1"
networkx = "3.3"
numpy = "2.1.2"
packaging = "24.1"
pandas = "2.2.3"
pillow = "10.4.0"
pre-commit = "4.0.1"
protobuf = "5.28.2"
pyarrow = "17.0.0"
pydeck = "0.9.1"
pyparsing = "3.1.4"
python = "^3.11"
python-dateutil = "2.9.0.post0"
pytz = "2024.2"
referencing = "0.35.1"
requests = "2.32.3"
rich = "13.9.2"
rpds-py = "0.20.0"
ruff = "0.6.9"
scikit-image = "0.24.0"
scipy = "1.14.1"
six = "1.16.0"
smmap = "5.0.1"
streamlit = "1.39.0"
tenacity = "9.0.0"
tifffile = "2024.9.20"
toml = "0.10.2"
torch = "2.7.1"
tornado = "6.4.1"
transformers = "4.37.0"
typing_extensions = "4.12.2"
tzdata = "2024.2"
urllib3 = "2.2.3"
watchdog = "5.0.3"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# https://docs.astral.sh/ruff/configuration/

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
indent-width = 4
line-length = 200
# line-length = 88

# Assume Python 3.8
# target-version = "py38"

[tool.ruff.lint]
ignore = []
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear  #   "UP", # pyupgrade
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
